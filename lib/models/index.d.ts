/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the SpamAssassinRule class.
 * @constructor
 * @member {number} [score]
 * @member {string} [rule]
 * @member {string} [description]
 */
export interface SpamAssassinRule {
  score?: number;
  rule?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the SpamCheckResult class.
 * @constructor
 * @member {array} [spamAssassin]
 * @member {uuid} [emailId]
 * @member {uuid} [accountId]
 * @member {number} [score]
 */
export interface SpamCheckResult {
  spamAssassin?: SpamAssassinRule[];
  emailId?: string;
  accountId?: string;
  score?: number;
}

/**
 * @class
 * Initializes a new instance of the MailosaurError class.
 * @constructor
 * @member {string} [type] Possible values include: 'AuthenticationError',
 * 'ValidationError', 'ResourceNotFoundError', 'UnknownError'
 * @member {object} [messages]
 * @member {object} [model]
 */
export interface MailosaurError {
  type?: string;
  messages?: { [propertyName: string]: string };
  model?: any;
}

/**
 * @class
 * Initializes a new instance of the Link class.
 * @constructor
 * @member {string} [href]
 * @member {string} [text]
 */
export interface Link {
  href?: string;
  text?: string;
}

/**
 * @class
 * Initializes a new instance of the Image class.
 * @constructor
 * @member {string} [src]
 * @member {string} [alt]
 */
export interface Image {
  src?: string;
  alt?: string;
}

/**
 * @class
 * Initializes a new instance of the EmailData class.
 * @constructor
 * @member {array} [links]
 * @member {array} [images]
 * @member {string} [body]
 */
export interface EmailData {
  links?: Link[];
  images?: Image[];
  body?: string;
}

/**
 * @class
 * Initializes a new instance of the EmailAddress class.
 * @constructor
 * @member {string} [address]
 * @member {string} [name]
 */
export interface EmailAddress {
  address?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the Attachment class.
 * @constructor
 * @member {uuid} id
 * @member {string} [contentType]
 * @member {string} [fileName]
 * @member {string} [contentId]
 * @member {number} [length]
 * @member {date} [creationDate]
 */
export interface Attachment {
  id: string;
  contentType?: string;
  fileName?: string;
  contentId?: string;
  length?: number;
  creationDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the Email class.
 * @constructor
 * @member {object} [html]
 * @member {array} [html.links]
 * @member {array} [html.images]
 * @member {string} [html.body]
 * @member {object} [text]
 * @member {array} [text.links]
 * @member {array} [text.images]
 * @member {string} [text.body]
 * @member {object} [headers]
 * @member {string} [subject]
 * @member {string} [priority]
 * @member {array} [from]
 * @member {array} [to]
 * @member {array} [attachments]
 * @member {date} received
 * @member {string} [senderhost]
 * @member {string} [server]
 * @member {uuid} id
 */
export interface Email {
  html?: EmailData;
  text?: EmailData;
  headers?: { [propertyName: string]: any };
  subject?: string;
  priority?: string;
  from?: EmailAddress[];
  to?: EmailAddress[];
  attachments?: Attachment[];
  received: Date;
  senderhost?: string;
  server?: string;
  id: string;
}

/**
 * @class
 * Initializes a new instance of the SearchCriteria class.
 * @constructor
 * @member {string} [sentTo] The full email address to which the target email
 * was sent.
 * @member {string} [subject] The value to seek within the target email's
 * subject line.
 * @member {string} [body] The value to seek within the target email's HTML or
 * text body.
 */
export interface SearchCriteria {
  sentTo?: string;
  subject?: string;
  body?: string;
}

/**
 * @class
 * Initializes a new instance of the Message class.
 * @constructor
 * @member {object} [html]
 * @member {array} [html.links]
 * @member {array} [html.images]
 * @member {string} [html.body]
 * @member {object} [text]
 * @member {array} [text.links]
 * @member {array} [text.images]
 * @member {string} [text.body]
 * @member {object} [headers]
 * @member {string} [subject]
 * @member {array} [from]
 * @member {array} [to]
 * @member {array} [attachments]
 * @member {date} received
 * @member {string} [senderhost]
 * @member {string} [server]
 * @member {uuid} id
 */
export interface Message {
  html?: EmailData;
  text?: EmailData;
  headers?: { [propertyName: string]: any };
  subject?: string;
  from?: EmailAddress[];
  to?: EmailAddress[];
  attachments?: Attachment[];
  received: Date;
  senderhost?: string;
  server?: string;
  id: string;
}

/**
 * @class
 * Initializes a new instance of the ForwardingRule class.
 * @constructor
 * @member {string} [field] Possible values include: 'From', 'To', 'Subject'
 * @member {string} [operator] Possible values include: 'EndsWith',
 * 'StartsWith', 'Contains'
 * @member {string} [value]
 * @member {string} [forwardTo]
 */
export interface ForwardingRule {
  field?: string;
  operator?: string;
  value?: string;
  forwardTo?: string;
}

/**
 * @class
 * Initializes a new instance of the Server class.
 * @constructor
 * @member {string} [id] Unique identifier for the server.
 * @member {string} [password] The password used for SMTP authentication.
 * @member {string} [name] A name used to identify the server.
 * @member {array} [users]
 * @member {number} [emails] The current count of emails held within the
 * server.
 * @member {array} [forwardingRules]
 */
export interface Server {
  id?: string;
  password?: string;
  name?: string;
  users?: string[];
  emails?: number;
  forwardingRules?: ForwardingRule[];
}

/**
 * @class
 * Initializes a new instance of the ServerCreateOptions class.
 * @constructor
 * @member {string} [name] A name used to identify the server.
 */
export interface ServerCreateOptions {
  name?: string;
}
