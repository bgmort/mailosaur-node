/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a Server.
 */
class Server {
  /**
   * Create a Server.
   * @member {string} [id] Unique identifier for the server.
   * @member {string} [password] The password used for SMTP authentication.
   * @member {string} [name] A name used to identify the server.
   * @member {array} [users]
   * @member {number} [emails] The current count of emails held within the
   * server.
   * @member {array} [forwardingRules]
   */
  constructor() {
  }

  /**
   * Defines the metadata of Server
   *
   * @returns {object} metadata of Server
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Server',
      type: {
        name: 'Composite',
        className: 'Server',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          password: {
            required: false,
            serializedName: 'password',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          users: {
            required: false,
            serializedName: 'users',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'UuidElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          emails: {
            required: false,
            serializedName: 'emails',
            type: {
              name: 'Number'
            }
          },
          forwardingRules: {
            required: false,
            serializedName: 'forwardingRules',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ForwardingRuleElementType',
                  type: {
                    name: 'Composite',
                    className: 'ForwardingRule'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = Server;
